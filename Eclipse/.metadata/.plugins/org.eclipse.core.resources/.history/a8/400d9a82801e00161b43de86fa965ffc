<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/e022889be71d00161a03a4d5b0fb7de0
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
=======
=======
<<<<<<< HEAD:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/400d9a82801e00161b43de86fa965ffc
>>>>>>> fc06ce784d2430f51a70eff376f51b92ce7a3698
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
<<<<<<< HEAD
>>>>>>> 1b323e92e95a47b6f0bdd13f3bcde9c2fa2dbcaa:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/400d9a82801e00161b43de86fa965ffc
=======
=======
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
>>>>>>> cbc1e0d816a6c726ec7db5d9b7bdbb0a77ce6231:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/e022889be71d00161a03a4d5b0fb7de0
>>>>>>> fc06ce784d2430f51a70eff376f51b92ce7a3698
=======
<<<<<<< HEAD
<<<<<<< HEAD:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/e022889be71d00161a03a4d5b0fb7de0
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
=======
=======
<<<<<<< HEAD:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/400d9a82801e00161b43de86fa965ffc
>>>>>>> fc06ce784d2430f51a70eff376f51b92ce7a3698
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
<<<<<<< HEAD
>>>>>>> 1b323e92e95a47b6f0bdd13f3bcde9c2fa2dbcaa:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/400d9a82801e00161b43de86fa965ffc
=======
=======
package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow view;
	// NETWORK
	//private InformationService infoService;

	public ButtonsController(MainWindow view) {
		this.view = view;
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			AddMusicWindow addView = new AddMusicWindow();
			addView.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}
	}
}
>>>>>>> cbc1e0d816a6c726ec7db5d9b7bdbb0a77ce6231:Eclipse/.metadata/.plugins/org.eclipse.core.resources/.history/a8/e022889be71d00161a03a4d5b0fb7de0
>>>>>>> fc06ce784d2430f51a70eff376f51b92ce7a3698
>>>>>>> 28042c37a8fd80e9c55b4f37064afc453522540a
