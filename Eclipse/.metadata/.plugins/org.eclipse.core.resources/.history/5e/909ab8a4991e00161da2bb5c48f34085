package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import model.DDBBConnection;
import view.AddMusicWindow;
import view.MainWindow;
import view.StatisticsWindow;

public class ButtonsController implements ActionListener{

	// VISTA
	private MainWindow main;
	private AddMusicWindow music;
	
	// NETWORK
	//private InformationService infoService;
	
	//Modelo 
	private DDBBConnection model;

	public ButtonsController(MainWindow view, DDBBConnection model) {
		this.main = view;
		this.model = model;
		music = new AddMusicWindow();
		// Instanciem la classe per poder enviar missatges.
		// Passem una referencia a lobjecte per si cal notificar alguna informacio.
		// Aquest tambe podria ser creat des del prinicpal.	
		//this.infoService = new InformationService(this);
	}

	public void actionPerformed(ActionEvent event) {
		System.out.println(event.getActionCommand());
		if (event.getActionCommand().equals("MainWindow.addActionCommand")) {
			// Recuperem la informació que sha escrit a la vista
			// i l'enviem al servidor
			
			//Creem la vista temporal de adició
			music.setVisible(true);
			
			// Actualitzem la vista
			//vista.addText(vista.getTypedMessage());
		}else if (event.getActionCommand().equals("MainWindow.statisticsActionCommand")){
			StatisticsWindow StadisticsView = new StatisticsWindow();
			StadisticsView.setVisible(true);

		}else if (event.getActionCommand().equals("AddMusicWindow.acceptActionCommand")){
			model.addSong(music.getTypedSongTitle(), music.getTypedGenre(), music.getTypedArtist(),
					music.getTypedAlbum(), music.getTypedPath(), 0);
			System.out.println("Añadida: "+music.getTypedSongTitle());
		}
	}
}
